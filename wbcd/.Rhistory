summ$Q1
summ[5]-summ[2]
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue')
lines(rep(-threshold, 66), col='blue')
sum(abs(test_obs-test_fit)<threshold)/66
max(abs(test_obs-test_fit))
library(faraway)
data(ozone)
set.seed(1990)
s <- sample(1:330, 330*.8, replace=F)
train <- ozone[s,1:9]
test <- ozone[-s,1:9]
train$O3 <- log(train$O3)
names(train)[1] <- 'logO3'
model <- lm(logO3 ~ ., data=train)
model <- step(model, trace=F)
summary(model)
test_fit <- exp(predict(model, test))
test_obs <- test$O3
plot(1:66, test_obs-test_fit, cex=0.5, xlab=NA, xaxt='n',
ylab='Observed O3 - Predicted O3', main='Residuals: Testing Data')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue')
lines(rep(-threshold, 66), col='blue')
sum(abs(test_obs-test_fit)<threshold)/66
library(faraway)
?airpass
airpass$year
library(faraway)
airpass$year
library(faraway)
data(troutegg)
# We would like to model period as a numerical predictor, not a factor
troutegg$period <- as.integer(as.vector(troutegg$period))
# Plot survival rate against period of submersion for each location
troutegg_1234 <- troutegg[troutegg$location != 5, ]
troutegg_5 <- troutegg[troutegg$location == 5, ]
with(troutegg_1234, plot(period, survive/total,
main='Observations of Trout Eggs',
xlab='Period (weeks)', ylab='Survival Rate',
xlim=c(0,13), ylim=c(0,1)))
with(troutegg_5, points(period, survive/total, col='red'))
legend('bottomleft', legend=c('Locations 1 to 4', 'Location 5'),
col = c('black', 'red'), pch=c(1,1),
box.lty=0, inset=0.01)
# Check for interaction
with(troutegg, interaction.plot(period, location, survive/total))
# Model with and without interaction
model_add <- glm(cbind(survive, total-survive) ~ location + period,
family=binomial, data=troutegg)
summary(model_add)
model_int <- glm(cbind(survive, total-survive) ~ location * period,
family=binomial, data=troutegg)
summary(model_int)
# Check which model is preferred
anova(model_add, model_int, test='Chisq')
# Plotting the fit: Model without interaction
b1 <- model_add$coefficients
# Plot points from all 5 locations
with(troutegg_1234, plot(period, survive/total,
main = 'Chance of Survival vs. Period',
xlab='Period (weeks)', ylab='Survival Rate',
xlim=c(2,13), ylim=c(0,1)))
with(troutegg_5, points(period, survive/total, col='red'))
# Add lines from each of the locations
curve(ilogit(b1[1] + b1[6]*x), add=T, col='forestgreen', lty=1)
curve(ilogit(b1[1] + +b1[2] + b1[6]*x), add=T, col='darkgreen', lty=2)
curve(ilogit(b1[1] + +b1[3] + b1[6]*x), add=T, col='darkolivegreen4', lty=3)
curve(ilogit(b1[1] + +b1[4] + b1[6]*x), add=T, col='chartreuse4', lty=4)
curve(ilogit(b1[1] + b1[5] + b1[6]*x), add=T, col='firebrick')
legend('bottomleft', legend=c('Loc 1', 'Loc 2', 'Loc 3', 'Loc 4', 'Loc 5'),
col = c('forestgreen','darkgreen','darkolivegreen4',
'chartreuse4','firebrick'),
lty=c(1,2,3,4,1), box.lty=0, inset=0.01, cex=0.8)
# Plotting the fit: Model with interaction
b2 <- model_int$coefficients
# Plot points from all 5 locations
with(troutegg_1234, plot(period, survive/total,
main = 'Chance of Survival vs. Period (with interaction)',
xlab='Period (weeks)', ylab='Survival Rate',
xlim=c(2,13), ylim=c(0,1)))
with(troutegg_5, points(period, survive/total, col='red'))
# Add lines from each of the locations
curve(ilogit(b2[1] + b2[6]*x), add=T, col='forestgreen', lty=1)
curve(ilogit(b2[1] + +b2[2] + (b2[7]+b2[6])*x), add=T, col='darkgreen', lty=2)
curve(ilogit(b2[1] + +b2[3] + (b2[8]+b2[6])*x), add=T, col='darkolivegreen4', lty=3)
curve(ilogit(b2[1] + +b2[4] + (b2[9]+b2[6])*x), add=T, col='chartreuse4', lty=4)
curve(ilogit(b2[1] + b2[5] + (b2[10]+b2[6])*x), add=T, col='firebrick')
legend('bottomleft', legend=c('Loc 1', 'Loc 2', 'Loc 3', 'Loc 4', 'Loc 5'),
col = c('forestgreen','darkgreen','darkolivegreen4',
'chartreuse4','firebrick'),
lty=c(1,2,3,4,1), box.lty=0, inset=0.01, cex=0.8)
# Log ratio test
dev_difference <-
# We can use the model to predict the chance of survival. For instance:
newval <- data.frame(location=factor(5), period=6)
# Test for relevance of location in presence of period
anova(glm(cbind(survive, total-survive) ~ period,
family=binomial, data=troutegg),
model_int,
test='Chisq')
# Check which model is preferred
anova(model_add, model_int, text='Chisq')
# Check which model is preferred
anova(model_add, model_int, text='ChiSq')
# Check which model is preferred
anova(model_add, model_int, test='Chisq')
model_add$deviance - model_int$deviance
df_diff = length(model_add$coefficients) - length(model_int$coefficients)
df_diff = length(model_int$coefficients) - length(model_add$coefficients)
pchisq(dev_diff,df_diff,lower=F)
dev_diff = model_add$deviance - model_int$deviance
pchisq(dev_diff,df_diff,lower=F)
library(faraway)
data(ozone)
set.seed(1990)
s <- sample(1:330, 330*.8, replace=F)
train <- ozone[s,1:9]
test <- ozone[-s,1:9]
train$O3 <- log(train$O3)
model1 <- lm(O3 ~ ., data=train)
set.seed(1990)
s <- sample(1:330, 330*.8, replace=F)
data(ozone)
train <- ozone[s,1:9]
test <- ozone[-s,1:9]
model1 <- lm(O3 ~ ., data=train)
model1 <- step(model1, trace=F)
plot(model1)
par(mfrow=c(2,2))
plot(model1)
plot(model1)
plot(train)
plot(train, pch='.')
par(mfrow=c(2,2))
plot(model1)
train$O3 <- log(train$O3)
names(train)[1] <- 'logO3'
model2 <- lm(logO3 ~ ., data=train)
model2 <- step(model, trace=F)
plot(train)
plot(train, pch='.')
model2 <- lm(logO3 ~ ., data=train)
model2 <- step(model2, trace=F)
plot(model1)
plot(model=2)
plot(model2)
train_adjusted <- train[-c(286, 327)]
model3 <- lm(logO3 ~ ., data=train_adjusted)
model3 <- step(model3, trace=F)
plot(model3)
train_adjusted <- train[-c(286, 327)]
train$O3 <- log(train$O3)
train <- ozone[s,1:9]
test <- ozone[-s,1:9]
plot(train, pch='.')
model1 <- lm(O3 ~ ., data=train)
model1 <- step(model1, trace=F)
par(mfrow=c(2,2))
plot(model1)
train$O3 <- log(train$O3)
names(train)[1] <- 'logO3'
plot(train, pch='.')
model2 <- lm(logO3 ~ ., data=train)
model2 <- step(model2, trace=F)
plot(model2)
View(train_adjusted)
View(train)
train_adjusted <- train[-c(286, 327),]
View(train_adjusted)
data(ozone)
set.seed(1990)
s <- sample(1:330, 330*.8, replace=F)
train <- ozone[s,1:9]
test <- ozone[-s,1:9]
rownames(train) <- NULL
rownames(test) <- NULL
View(test)
model2 <- lm(logO3 ~ ., data=train)
model2 <- step(model2, trace=F)
train$O3 <- log(train$O3)
names(train)[1] <- 'logO3'
plot(train, pch='.')
model2 <- lm(logO3 ~ ., data=train)
model2 <- step(model2, trace=F)
plot(model2)
train_adjusted <- train[-c(2, 146),]
model3 <- lm(logO3 ~ ., data=train_adjusted)
model3 <- step(model3, trace=F)
plot(model3)
summary(model3)
anova(model3)
test_fit <- exp(predict(model, test))
test_fit <- exp(predict(model3, test))
test_obs <- test$O3
plot(1:66, test_obs-test_fit, cex=0.5, xlab=NA, xaxt='n',
ylab='Observed O3 - Predicted O3', main='Residuals: Testing Data')
plot(1:66, test_obs-test_fit, cex=0.5, xlab=NA, xaxt='n',
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue')
lines(rep(-threshold, 66), col='blue')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
plot(1:66, test_obs-test_fit, cex=0.5, xlab=NA, xaxt='n',
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sort(test_obs-test_fit)
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n',
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n',
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,10),
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-11,10),
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,11),
ylab='Observed O3 - Predicted O3', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
summ
sum(abs(test_obs-test_fit)<threshold)/66
test_fit <- predict(model3, test)
test_obs <- log(test$O3)
sort(test_obs-test_fit)
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
threshold <- log((summ[5]-summ[2])/2)
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
threshold <- log((summ[5]-summ[2]))/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
plot(1:66, sort(test_obs/test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- log((summ[5]-summ[2]))/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
sum(abs(test_obs/test_fit)<threshold)/66
?ozone
mean(ozone$O3)
sqrt(mean((test_obs-test_fit)^2))
test_fit <- predict(model3, test)
test_obs <- log(test$O3)
test_fit <- exp(predict(model3, test))
test_obs <- test$O3
sort(test_obs-test_fit)
plot(1:66, sort(test_obs-test_fit), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
lines(rep(-threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
sqrt(mean((test_obs-test_fit))
sqrt(mean((test_obs-test_fit)))
sqrt(mean((test_obs-test_fit)))
plot(1:66, sort(abs(test_obs-test_fit)), cex=0.5, xlab=NA, xaxt='n', ylim=c(-10,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
plot(1:66, sort(abs(test_obs-test_fit)), cex=0.5, xlab=NA, xaxt='n', ylim=c(0,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
lines(rep(0,66), col='red')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
sqrt(mean((test_obs-test_fit)))
plot(1:66, sort(abs(test_obs-test_fit)), cex=0.5, xlab=NA, xaxt='n', ylim=c(0,11),
ylab='(Observed O3) - (Predicted O3)', main='Residuals: Test Set')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
sqrt(mean((test_obs-test_fit)))
plot(1:66, sort(abs(test_obs-test_fit)), cex=0.5, xlab=NA, xaxt='n', ylim=c(0,11),
ylab='Abs(Observed O3 - Predicted O3)', main='Residuals: Test Set')
summ <- summary(ozone$O3)
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
plot(1:66, sort(abs(test_obs-test_fit)), cex=0.5, xlab=NA, xaxt='n', ylim=c(0,11),
ylab='|Observed O3 - Predicted O3|', main='Residuals: Test Set')
threshold <- (summ[5]-summ[2])/2
lines(rep(threshold, 66), col='blue', lty='dashed')
sum(abs(test_obs-test_fit)<threshold)/66
sqrt(mean((test_obs-test_fit)))
?ozone
library(faraway)
ne
?ozone
summary(ozone)
summary(ozone#O3)
summary(ozone$O3)
summary(ozone$O3)
ozone <- ozone[1:9]
ozone$O3 <- log(ozone$O3)
names(ozone)[1] <- 'logO3'
set.seed(1990)
train.control <- trainControl(method='cv', number=10)
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
library(caret)
install.packages('caret')
library(caret)
train.control <- trainControl(method='cv', number=10)
model <- train(logO3~., data=ozone, moethod='lm', trControl=train.control)
summary(model)
print(modelx)
print(model)
model$parameters
View(model)
View(model)
install.packages('mlbench')
library(mlbench)
data(BreastCancer)
?BreastCancer
View(BreastCancer)
setwd('/Users/nickjolly/Documents/cautious-happiness/wbcd')
bc <- read.csv('data.csv')
View(bc)
class <- bc[2]
View(class)
bc <- bc[3:32]
bc_pca <- prcomp(bc, scale=T)
summary(bc_pca)
bc_pca
autoplot(bc_pca, colour=class, data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
library(mlbench)
library(factoextra)
library(ggplot2)
library(ggfortify)
autoplot(bc_pca, colour=class, data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
autoplot(bc_pca, colour=class, data=bc, size=0.5)
summary(bc_pca)
bc_pca
autoplot(bc_pca, colour=class, data=bc, size=0.5)
autoplot(bc_pca, data=bc, size=0.5)
bc <- read.csv('data.csv')
bc <- bc[2:32]
bc_pca <- prcomp(bc[2:32], scale=T)
bc_pca <- prcomp(bc[,2:32], scale=T)
str(bc[2:32])
str(bc[,2:32])
str(bc)
bc_pca <- prcomp(bc[2:32], scale=T)
bc_pca <- prcomp(bc[2:32,], scale=T)
bc_pca <- prcomp(bc[,2:32], scale=T)
bc_pca <- prcomp(bc[:,2:32], scale=T)
bc_pca <- prcomp(bc[1:699,2:32], scale=T)
bc_pca <- prcomp(bc[1:699], scale=T)
bc_pca <- prcomp(bc, scale=T)
bc <- bc[2:32]
bc_pca <- prcomp(bc, scale=T)
bc <- read.csv('data.csv')
bc_pca <- prcomp(bc[3:32], scale=T)
summary(bc_pca)
bc_pca
autoplot(bc_pca, colour=class, data=bc, size=0.5)
autoplot(bc_pca, colour=diagnosis, data=bc, size=0.5)
autoplot(bc_pca, colour=bc$diagnosis, data=bc, size=0.5)
autoplot(bc_pca, data=bc, size=0.5)
autoplot(bc_pca, data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
autoplot(bc_pca, colour=bc$diagnosis,data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
library(mlbench)
data(BreastCancer)
bc <- BreastCancer[complete.cases(BreastCancer),]
bc_pca <- prcomp(bc[2:10], scale=T)
autoplot(bc_pca, colour='Class', data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
bc_pca <- prcomp(bc[2:10], scale=T)
library(mlbench)
library(factoextra)
library(ggplot2)
library(ggfortify)
data(BreastCancer)
bc <- BreastCancer[complete.cases(BreastCancer),]
bc$Cl.thickness <- as.numeric(levels(bc$Cl.thickness)[bc$Cl.thickness])
bc$Cell.size <- as.numeric(levels(bc$Cell.size))[bc$Cell.size]
bc$Cell.shape <- as.numeric(levels(bc$Cell.shape))[bc$Cell.shape]
bc$Marg.adhesion <- as.numeric(levels(bc$Marg.adhesion))[bc$Marg.adhesion]
bc$Epith.c.size <- as.numeric(levels(bc$Epith.c.size))[bc$Epith.c.size]
bc$Bare.nuclei <- as.numeric(levels(bc$Bare.nuclei))[bc$Bare.nuclei]
bc$Bl.cromatin <- as.numeric(levels(bc$Bl.cromatin))[bc$Bl.cromatin]
bc$Normal.nucleoli <- as.numeric(levels(bc$Normal.nucleoli))[bc$Normal.nucleoli]
bc$Mitoses <- as.numeric(levels(bc$Mitoses))[bc$Mitoses]
bc_pca <- prcomp(bc[2:10], scale=T)
autoplot(bc_pca, colour='Class', data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
str(bc)
setwd('/Users/nickjolly/Documents/cautious-happiness/wbcd')
bc <- read.csv('data.csv')
bc <- read.csv('data.csv')
bc$diagnosis <- factor(bc$diagnosis)
bc_pca <- prcomp(bc[3:32], scale=T)
summary(bc_pca)
bc_pca
autoplot(bc_pca, colour=bc$diagnosis, data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
autoplot(bc_pca, colour=diagnosis, data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
autoplot(bc_pca, colour='diagnosis', data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
fviz_pca_var(bc_pca, col.var = 'contrib',
repel = TRUE, xlab='PC1', ylab='PC2',
legend.title = 'Contribution') +
scale_colour_gradientn(colors=c(low='purple3', high='red3'),
breaks=c(9,13.5),labels=c('Less','More')) +
theme(plot.title=element_text(face='bold', hjust=0.5))
data(BreastCancer)
bc <- BreastCancer[complete.cases(BreastCancer),]
str(bc)
bc$Cl.thickness <- as.numeric(levels(bc$Cl.thickness)[bc$Cl.thickness])
bc$Cell.size <- as.numeric(levels(bc$Cell.size))[bc$Cell.size]
bc$Cell.shape <- as.numeric(levels(bc$Cell.shape))[bc$Cell.shape]
bc$Marg.adhesion <- as.numeric(levels(bc$Marg.adhesion))[bc$Marg.adhesion]
bc$Epith.c.size <- as.numeric(levels(bc$Epith.c.size))[bc$Epith.c.size]
bc$Bare.nuclei <- as.numeric(levels(bc$Bare.nuclei))[bc$Bare.nuclei]
bc$Bl.cromatin <- as.numeric(levels(bc$Bl.cromatin))[bc$Bl.cromatin]
bc$Normal.nucleoli <- as.numeric(levels(bc$Normal.nucleoli))[bc$Normal.nucleoli]
bc$Mitoses <- as.numeric(levels(bc$Mitoses))[bc$Mitoses]
bc_pca <- prcomp(bc[2:10], scale=T)
autoplot(bc_pca, colour='Class', data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
fviz_eig(bc_pca)
fviz_pca_var(bc_pca, col.var = 'Contribution',
gradient.cols = c('#009509', '#DFAB12', '#E05032'), repel = TRUE)
autoplot(bc_pca, colour='Class', data=bc, size=0.5) +
scale_colour_manual(name='Class', values=c('dodgerblue2','magenta3')) +
ggtitle('Breast Cancer: Class') +
theme(plot.title=element_text(face='bold', hjust=0.5))
fviz_eig(bc_pca)
fviz_pca_var(bc_pca, col.var = 'Contribution',
gradient.cols = c('#009509', '#DFAB12', '#E05032'), repel = TRUE)
fviz_pca_var(bc_pca, col.var = 'contrib',
repel = TRUE, xlab='PC1', ylab='PC2',
legend.title = 'Contribution') +
scale_colour_gradientn(colors=c(low='purple3', high='red3'),
breaks=c(9,13.5),labels=c('Less','More')) +
theme(plot.title=element_text(face='bold', hjust=0.5))
